{"version":3,"sources":["components/Home.js","context/UsersContext.js","hooks/useUsersActions.js","components/Users.js","components/InputForm.js","components/Create.js","components/Edit.js","context/AdminsContext.js","hooks/useAdminsActions.js","components/Login.js","components/Header.js","hocs/PrivateRoute.js","App.js","index.js"],"names":["Home","to","defaultUsersContextState","users","id","firstName","lastName","position","defaultUsersContext","context","setContext","Error","UsersContext","React","createContext","UsersProvider","children","useState","Provider","value","useUsersActions","useContext","addNewUser","useCallback","newUser","prevState","deleteUser","key","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","backgroundColor","table","minWidth","head","fontSize","body","floatingButton","top","right","bottom","left","props","classes","history","useHistory","sortByFirstNameUp","sortByFirstNameDown","sortByLastNameUp","sortByLastNameDown","sortByPositionUp","sortByPositionDown","sortButtonColor","sortingBy","setSortingBy","Object","values","arrayUsers","setArrayUsers","sortingArray","array","direction","fieldName","sort","a","b","toLowerCase","sortedUsers","useMemo","obj","hasOwnProperty","setDefaultColor","handleDeleteButtonClick","event","currentTarget","handleEditButtonClick","push","useEffect","search","filter","user","includes","name","Paper","className","Table","TableHead","TableRow","TableCell","align","IconButton","margin","size","color","onClick","TableBody","map","Fab","InputForm","onTextChange","label","inputRef","TextField","variant","onChange","Create","setUser","inputs","initialInputs","input","inputNumb","isDataValid","setDataValid","onInputChange","prevUser","target","ev","Button","Date","now","forEach","Edit","location","useLocation","splittedPathname","pathname","split","userToEditId","length","defaultValue","style","height","defaultAdminsContextState","admins","email","pass","defaultAdminsContext","AdminsContext","AdminsProvider","useAdminsActions","addNewAdmin","newAdmin","deleteAdmin","useStyles","makeStyles","paperRoot","boxShadow","background","button","Login","CurrentAdmin","setValue","helperTextEmail","helperTextPass","helperTextPassConfirm","helperText","setHelperText","handleEmailBlur","test","setAdmin","loginData","setLoginData","passConfirmed","admin","checkState","setChecState","registerId","onUserInputChange","textAlign","display","Tabs","newValue","indicatorColor","textColor","centered","Tab","required","error","type","onBlur","autoComplete","currentAdmin","find","currentId","FormControlLabel","control","Checkbox","checked","visibility","helperTextLastName","helperTextPosition","flexGrow","palette","success","light","menuButton","marginRight","title","borderRadius","shape","alpha","common","white","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","StyledMenu","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","MenuItem","Header","anchorEl","setAnchorEl","handleMenuItemClick","path","localStorage","getItem","login","setLogin","setPathname","localPath","AppBar","Toolbar","edge","keepMounted","open","Boolean","onClose","ListItemIcon","ListItemText","primary","Typography","InputBase","placeholder","inputProps","PrivateRoute","isLoggedIn","render","App","exact","component","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.69a4a4ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h4>You can go to:</h4>\r\n      <ul>\r\n        <li>\r\n          <Link to='/users'>Users List</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/users/create'>Add new user</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/login'>Quit</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\n\r\nconst defaultUsersContextState = {\r\n  users: {\r\n    333333: {\r\n      id: 333333,\r\n      firstName: 'Semen',\r\n      lastName: 'Semenov',\r\n      position: 'trainee',\r\n    },\r\n    222222: {\r\n      id: 222222,\r\n      firstName: 'Petro',\r\n      lastName: 'Petrov',\r\n      position: 'worker on zavod',\r\n    },\r\n    444444: {\r\n      id: 444444,\r\n      firstName: 'Kiril',\r\n      lastName: 'Kirilov',\r\n      position: 'designer',\r\n    },\r\n    111111: {\r\n      id: 111111,\r\n      firstName: 'Ivan',\r\n      lastName: 'Ivanov',\r\n      position: 'worker',\r\n    },\r\n   },\r\n};\r\n\r\nexport const defaultUsersContext = {\r\n  context: defaultUsersContextState,\r\n  setContext: () => {\r\n    throw new Error('Please add the UsersContextxProvider to your page!');\r\n  },\r\n};\r\n\r\nexport const UsersContext = React.createContext(defaultUsersContext);\r\n\r\nexport const UsersProvider = ({children}) => {\r\n  const [context, setContext] = useState(defaultUsersContextState);\r\n  return (\r\n    <UsersContext.Provider\r\n      value={{\r\n        context,\r\n        setContext,\r\n      }}\r\n    >\r\n    {children}\r\n    </UsersContext.Provider>\r\n  );\r\n}","import { useCallback, useContext } from \"react\";\r\nimport { UsersContext } from \"../context/UsersContext\";\r\n\r\nconst useUsersActions = () => {\r\n  const { context, setContext } = useContext(UsersContext);\r\n\r\n  const addNewUser = useCallback((newUser) => {\r\n    setContext((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        users: {\r\n          ...prevState.users,\r\n          [newUser.id]: newUser,\r\n        }\r\n      }\r\n    });\r\n  }, [setContext]);\r\n\r\n  const deleteUser = useCallback((key) => {\r\n    setContext((prevState)=>{\r\n      const users = { ...prevState.users };\r\n\r\n      delete users[key];\r\n      \r\n      return {\r\n        ...prevState,\r\n        users,\r\n      }\r\n    });\r\n  }, [setContext]);\r\n  \r\n  return {\r\n    ...context,\r\n    addNewUser,\r\n    deleteUser,\r\n  };\r\n};\r\n\r\nexport default useUsersActions;","import React, { useMemo, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport useUsersActions from '../hooks/useUsersActions';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit,\r\n    overflowX: 'auto',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  head: {\r\n    fontSize: 20,\r\n  },\r\n  body: {\r\n    fontSize: 16,\r\n  },\r\n  floatingButton: {\r\n    position: 'fixed',\r\n    top: 'auto',\r\n    right: '10%',\r\n    bottom: '2%',\r\n    left: 'auto',\r\n  },\r\n});\r\n\r\nconst Users = (props) => {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n\r\n  const sortByFirstNameUp = 'sort-by-first-name-up';\r\n  const sortByFirstNameDown = 'sort-by-first-name-down';\r\n  const sortByLastNameUp = 'sort-by-last-name-up';\r\n  const sortByLastNameDown = 'sort-by-last-name-down';\r\n  const sortByPositionUp = 'sort-by-position-up';\r\n  const sortByPositionDown = 'sort-by-position-down';\r\n\r\n  let sortButtonColor = {\r\n    sortByFirstNameUp: 'primary',\r\n    sortByFirstNameDown: 'default',\r\n    sortByLastNameUp: 'default',\r\n    sortByLastNameDown: 'default',\r\n    sortByPositionUp: 'default',\r\n    sortByPositionDown: 'default'\r\n  }\r\n\r\n  const setDefaultColor = (obj) => {\r\n    for(let key in obj)\r\n      if(obj.hasOwnProperty(key))\r\n        obj[key] = 'default';\r\n  }\r\n\r\n  const {users, deleteUser} = useUsersActions();\r\n\r\n  const [sortingBy, setSortingBy] = useState(sortByFirstNameUp);\r\n\r\n  const [arrayUsers, setArrayUsers] = useState(Object.values(users));\r\n\r\n  const sortingArray = (array, direction, fieldName) => {\r\n    array.sort((a, b) => {\r\n      if(direction === 'up') {\r\n        if(a[fieldName].toLowerCase() > b[fieldName].toLowerCase()) return 1;\r\n        if(a[fieldName].toLowerCase() < b[fieldName].toLowerCase()) return -1;\r\n        return 0;\r\n      } else {\r\n        if(a[fieldName].toLowerCase() < b[fieldName].toLowerCase()) return 1;\r\n        if(a[fieldName].toLowerCase() > b[fieldName].toLowerCase()) return -1;\r\n        return 0;\r\n      }\r\n    });\r\n    return array;\r\n  }\r\n  \r\n  const sortedUsers = useMemo(() => {\r\n    setDefaultColor(sortButtonColor);\r\n\r\n    switch(sortingBy) {\r\n      case sortByFirstNameUp : \r\n        sortButtonColor.sortByFirstNameUp='primary';\r\n        return sortingArray(arrayUsers, 'up', 'firstName');\r\n\r\n      case sortByFirstNameDown :\r\n        sortButtonColor.sortByFirstNameDown='primary';\r\n        return sortingArray(arrayUsers, 'down', 'firstName');\r\n\r\n      case sortByLastNameUp :\r\n        sortButtonColor.sortByLastNameUp='primary';\r\n        return sortingArray(arrayUsers, 'up', 'lastName');\r\n\r\n      case sortByLastNameDown :\r\n        sortButtonColor.sortByLastNameDown='primary';\r\n        return sortingArray(arrayUsers, 'down', 'lastName');\r\n\r\n        case sortByPositionUp :\r\n          sortButtonColor.sortByPositionUp='primary';\r\n          return sortingArray(arrayUsers, 'up', 'position');\r\n\r\n      case sortByPositionDown :\r\n        sortButtonColor.sortByPositionDown='primary';\r\n        return sortingArray(arrayUsers, 'down', 'position');\r\n\r\n      default : return arrayUsers;\r\n    }\r\n  }, [sortingBy, arrayUsers]);\r\n\r\n  const handleDeleteButtonClick = (event) => {\r\n    deleteUser(event.currentTarget.value);\r\n  }\r\n\r\n  const handleEditButtonClick = (event) => {\r\n    history.push(`/users/${event.currentTarget.value}`);\r\n  }\r\n\r\n  const handleFloatButtonClick = () => {\r\n    history.push(`/users/create`);\r\n  } \r\n\r\n  React.useEffect(()=>{\r\n    if(users.search) {\r\n      setArrayUsers(Object.values(users).filter(user => (\r\n        user.firstName \r\n          ? user.firstName.toLowerCase().includes(users.search.name.toLowerCase()) || \r\n            user.lastName.toLowerCase().includes(users.search.name.toLowerCase())\r\n          : false)));\r\n    } else setArrayUsers(Object.values(users));\r\n  }, [users]);\r\n\r\n  return (\r\n    <>\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>First Name</span>\r\n              <IconButton \r\n                aria-label=\"sort\" \r\n                value={sortByFirstNameUp} \r\n                className={classes.margin} \r\n                size=\"small\"\r\n                color={sortButtonColor.sortByFirstNameUp}\r\n                onClick={() => setSortingBy(sortByFirstNameUp)}\r\n              >\r\n                <ArrowUpwardIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n              <IconButton \r\n                aria-label=\"sort\" \r\n                value={sortByFirstNameDown} \r\n                className={classes.margin} \r\n                size=\"small\"\r\n                color={sortButtonColor.sortByFirstNameDown}\r\n                onClick={() => setSortingBy(sortByFirstNameDown)}\r\n              >\r\n                <ArrowDownwardIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Last Name</span>\r\n              <IconButton \r\n                aria-label=\"sort\" \r\n                value={sortByLastNameUp}\r\n                className={classes.margin} \r\n                size=\"small\"\r\n                color={sortButtonColor.sortByLastNameUp}\r\n                onClick={() => setSortingBy(sortByLastNameUp)}\r\n              >\r\n                <ArrowUpwardIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n              <IconButton \r\n                aria-label=\"sort\" \r\n                value={sortByLastNameDown} \r\n                className={classes.margin} \r\n                size=\"small\"\r\n                color={sortButtonColor.sortByLastNameDown}\r\n                onClick={() => setSortingBy(sortByLastNameDown)}\r\n              >\r\n                <ArrowDownwardIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Position</span>\r\n              <IconButton \r\n                aria-label=\"sort\" \r\n                value={sortByPositionUp}\r\n                className={classes.margin} \r\n                size=\"small\"\r\n                color={sortButtonColor.sortByPositionUp}\r\n                onClick={() => setSortingBy(sortByPositionUp)}\r\n              >\r\n                <ArrowUpwardIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n              <IconButton \r\n                aria-label=\"sort\" \r\n                value={sortByPositionDown} \r\n                className={classes.margin} \r\n                size=\"small\"\r\n                color={sortButtonColor.sortByPositionDown}\r\n                onClick={() => setSortingBy(sortByPositionDown)}\r\n              >\r\n                <ArrowDownwardIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            </TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sortedUsers.map((user) => (\r\n            <TableRow key={user.id}>\r\n              <TableCell className={classes.body} align=\"center\">{user.firstName}</TableCell>\r\n              <TableCell className={classes.body} align=\"center\">{user.lastName}</TableCell>\r\n              <TableCell className={classes.body} align=\"center\">{user.position}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <IconButton aria-label=\"edit\" value={user.id} onClick={handleEditButtonClick}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"delete\" value={user.id} onClick={handleDeleteButtonClick}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    <div className={classes.floatingButton}>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleFloatButtonClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Users);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst InputForm = ({onTextChange, label, inputRef}) => {\r\n  return(\r\n    <TextField\r\n          id={`outlined-with-placeholder-${label}`}\r\n          label={label}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          inputRef={inputRef}\r\n          onChange={onTextChange}\r\n        />\r\n  )\r\n}\r\n\r\nexport default InputForm;","import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport InputForm from './InputForm.js';\r\nimport useUsersActions from '../hooks/useUsersActions'\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport default function Create() {\r\n  const history = useHistory();\r\n  \r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    position: ''\r\n  });\r\n\r\n  let inputs = [1, 2, 3];\r\n\r\n  const initialInputs = (input, inputNumb) => {\r\n    inputs[inputNumb] = input;\r\n  }\r\n\r\n  const clearInputs = () => {\r\n    inputs.forEach((input) => {input.value = '';})\r\n  }\r\n\r\n  const {addNewUser} = useUsersActions();\r\n\r\n  const [isDataValid, setDataValid] = useState(true);\r\n  \r\n  const onInputChange = (event, fieldName) => {\r\n    setUser((prevUser) => ({\r\n      ...prevUser,\r\n      [fieldName]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    if(user && user.firstName && user.lastName && user.position) {\r\n      addNewUser({\r\n        id: Date.now(),\r\n        ...user,\r\n      });\r\n  \r\n      clearInputs('');\r\n\r\n      setDataValid(true);\r\n\r\n      history.push('/users')\r\n    } else setDataValid(false);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h3>Add new user</h3>\r\n      <div>\r\n        <InputForm label='First name' inputRef={(ev) => initialInputs(ev, 0)} onTextChange={(ev) => onInputChange(ev, 'firstName')} />\r\n        <InputForm label='Last name' inputRef={(ev) => initialInputs(ev, 1)} onTextChange={(ev) => onInputChange(ev, 'lastName')} />\r\n        <InputForm label='Position' inputRef={(ev) => initialInputs(ev, 2)} onTextChange={(ev) => onInputChange(ev, 'position')} />\r\n      </div>\r\n        {!isDataValid ? <p>Enter valid User's Data</p> : <></>}\r\n      <div>\r\n        <Button variant=\"contained\" onClick={handleButtonClick}>SAVE</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport useUsersActions from '../hooks/useUsersActions'\r\n\r\nconst Edit = () => {\r\n  \r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  \r\n  const {users, deleteUser, addNewUser} = useUsersActions();\r\n\r\n  //take user ID from pathname\r\n  const splittedPathname = location.pathname.split('/');\r\n  const userToEditId = splittedPathname[splittedPathname.length - 1];\r\n\r\n  const [user, setUser] = React.useState(users[userToEditId]);\r\n\r\n  const onInputChange = (event, fieldName) => {\r\n    setUser((prevUser) => ({\r\n      ...prevUser,\r\n      [fieldName]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    deleteUser(user.id);\r\n    \r\n    addNewUser({\r\n      id: user,\r\n      ...user,\r\n    });\r\n\r\n    history.push('/users');\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <h3>Edit {user.firstName}'s data</h3>\r\n      <TextField\r\n          id=\"outlined-helperText-firstName\"\r\n          label=\"First Name\"\r\n          defaultValue={user.firstName}\r\n          variant=\"outlined\"\r\n          onChange={(ev) => onInputChange(ev, 'firstName')}\r\n        />\r\n        <TextField\r\n          id=\"outlined-helperText-lastName\"\r\n          label=\"Larst Name\"\r\n          defaultValue={user.lastName}\r\n          variant=\"outlined\"\r\n          onChange={(ev) => onInputChange(ev, 'lastName')}\r\n        />\r\n        <TextField\r\n          id=\"outlined-helperText-position\"\r\n          label=\"Position\"\r\n          defaultValue={user.position}\r\n          variant=\"outlined\"\r\n          onChange={(ev) => onInputChange(ev, 'position')}\r\n        />\r\n        <Button style={{height: '55px'}} variant=\"contained\" onClick={handleButtonClick}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Edit;","import React, { useState } from 'react';\r\n\r\nconst defaultAdminsContextState = {\r\n  admins: {\r\n    11: {\r\n      id: 11,\r\n      email: '11@i.ua',\r\n      pass: '1234',\r\n    },\r\n    22: {\r\n      id: 22,\r\n      email: '22@i.ua',\r\n      pass: '1234',\r\n    },\r\n    33: {\r\n      id: 33,\r\n      email: '33@i.ua',\r\n      pass: '1234',\r\n    },\r\n  },\r\n};\r\n\r\nconst defaultAdminsContext = {\r\n  context: defaultAdminsContextState,\r\n  setContext: () => {\r\n    throw new Error('Please add the AdminsContextProvider to your page');\r\n  }\r\n}\r\n\r\nexport const AdminsContext = React.createContext(defaultAdminsContext);\r\n\r\nexport const AdminsProvider = ( { children } ) => {\r\n  const [context, setContext] = useState(defaultAdminsContextState);\r\n  return (\r\n    <AdminsContext.Provider\r\n      value={{context, setContext}}\r\n    >\r\n      {children}\r\n    </AdminsContext.Provider>\r\n  )\r\n}\r\n\r\n","import { useCallback, useContext } from \"react\";\r\nimport { AdminsContext } from \"../context/AdminsContext\";\r\n\r\nconst useAdminsActions = () => {\r\n  const { context, setContext } = useContext(AdminsContext);\r\n\r\n  const addNewAdmin = useCallback((newAdmin) => {\r\n    setContext((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        admins: {\r\n          ...prevState.admins,\r\n          [newAdmin.id]: newAdmin,\r\n        }\r\n      }\r\n    });\r\n  }, [setContext]);\r\n\r\n  const deleteAdmin = useCallback((key) => {\r\n    setContext((prevState)=>{\r\n      const admins = { ...prevState.admins };\r\n\r\n      delete admins[key];\r\n      \r\n      return {\r\n        ...prevState,\r\n        admins,\r\n      }\r\n    });\r\n  }, [setContext]);\r\n\r\n  return {\r\n    ...context,\r\n    addNewAdmin,\r\n    deleteAdmin,\r\n  };\r\n}\r\n\r\nexport default useAdminsActions;","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport useAdminsActions from '../hooks/useAdminsActions';\r\nimport useUsersActions from '../hooks/useUsersActions';\r\n\r\nconst useStyles = makeStyles({\r\n  paperRoot: {\r\n    margin: '10% auto',\r\n    boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)',\r\n    background: 'transparent',\r\n  },\r\n  button: {\r\n    margin: '10px 0px 20px 0px',\r\n    width: '30%',\r\n  },\r\n  input: {\r\n    width: '60%',\r\n  },\r\n});\r\n\r\nconst Login = () => {\r\n  \r\n  const history = useHistory();\r\n  \r\n  const { admins, addNewAdmin, deleteAdmin } = useAdminsActions();\r\n  \r\n  // LOGOUT automaticaly\r\n  if(admins.CurrentAdmin) deleteAdmin('CurrentAdmin');\r\n\r\n  // ***** For tabs *******************************\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  // **********************************************\r\n\r\n  // ******** For BOTH tabs ************************************\r\n  const [helperText, setHelperText] = useState({\r\n    helperTextEmail: '',\r\n    helperTextPass: '',\r\n    helperTextPassConfirm: '',\r\n  });\r\n\r\n  const emailValidation = (email) => (\r\n    /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(email)\r\n    ? true\r\n    : false\r\n  );\r\n\r\n  const handleEmailBlur = (event) => {\r\n    if(event.target.value) {\r\n      // if email was entered go to its validation\r\n      if (emailValidation(event.target.value)) {\r\n        //If email is valid, write it to local context and clear an error\r\n        setAdmin((prevState) => ({\r\n          ...prevState,\r\n          email: event.target.value,\r\n        }));\r\n        \r\n        setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextEmail: '',\r\n        }));\r\n      } else {\r\n        // If email is not valid go out with error\r\n        setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextEmail: 'Enter a valid email',\r\n        }));\r\n      }\r\n    } else {\r\n      // if email wasn't entered go out with error\r\n      setHelperText((prevState) => ({\r\n        ...prevState,\r\n        helperTextEmail: 'Enter an email',\r\n      }));\r\n    }\r\n  }\r\n  // ***********************************************************\r\n\r\n  // ******** For INPUT tab ************************************\r\n  const [loginData = {}, setLoginData] = useState();\r\n\r\n  const onInputChange = (event, fieldName) => {\r\n    setLoginData((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const handleLoginPassBlur = (event) => {\r\n    if(!event.target.value) {\r\n      setHelperText((prevState) => ({\r\n        ...prevState,\r\n        helperTextPass: 'Enter password',\r\n      }));\r\n    } else {\r\n      setHelperText((prevState) => ({\r\n        ...prevState,\r\n        helperTextPass: '',\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleEnterButtonClick = () => {\r\n    if(loginData.email && loginData.pass) {\r\n      const adminsList = Object.values(admins);\r\n      const currentAdmin = adminsList.find((admin) => (admin.email === loginData.email && admin.pass === loginData.pass));\r\n\r\n      if(currentAdmin) {\r\n        addNewAdmin({\r\n          ...currentAdmin,\r\n          id: 'CurrentAdmin',\r\n          currentId: currentAdmin.id,\r\n        });\r\n\r\n        history.push('/');\r\n      } else {\r\n        setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextEmail: 'We don\\'t know you!',\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  // **********************************************************\r\n\r\n  // ******** For REGISTER tab ***********************************\r\n  const { addNewUser } = useUsersActions();\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    position: ''\r\n  });\r\n\r\n  const [admin, setAdmin] = useState({\r\n    email: '',\r\n    pass: '',\r\n    passConfirmed: false,\r\n  });\r\n\r\n  const [checkState, setChecState] = useState(true);\r\n  \r\n  const registerId = Date.now();\r\n\r\n  const onUserInputChange = (event, fieldName) => {\r\n    setUser((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  const onAdminInputChange = (event, fieldName) => {\r\n    setAdmin((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: event.target.value,\r\n    }));\r\n    \r\n    if(fieldName === 'pass') {\r\n      setHelperText((prevState) => ({\r\n        ...prevState,\r\n        helperTextPass: '',\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleRegisterButtonClick = () => {\r\n\r\n    // save admin's data to context\r\n    if( !admin.email ) {\r\n      setHelperText((prevState) => ({\r\n        ...prevState,\r\n        helperTextEmail: 'Enter email',\r\n      }));\r\n    } else {\r\n      if( !admin.pass ) {\r\n        setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextPass: 'Enter password',\r\n        }));\r\n      } else {\r\n        setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextPass: '',\r\n        }));\r\n\r\n        if(!admin.passConfirmed) {\r\n          setHelperText((prevState) => ({\r\n            ...prevState,\r\n            helperTextPassConfirm: 'Enter confirm password',\r\n          }));\r\n        } else {\r\n          if(checkState) {\r\n            // save user's data to it's oun context to display it in the users list\r\n            if(user.firstName) {\r\n              if(user.lastName) {\r\n                if(user.position) {\r\n                  setHelperText((prevState) => ({\r\n                    ...prevState,\r\n                    helperTextLastName: '',\r\n                    helperTextPosition: '',\r\n                  }));\r\n      \r\n                  addNewUser({\r\n                    id: registerId,\r\n                    ...user,\r\n                  });\r\n\r\n                  addNewAdmin({\r\n                    id: registerId,\r\n                    email: admin.email,\r\n                    pass: admin.pass,\r\n                  });\r\n                  // add CurrentAdmin to context\r\n                  addNewAdmin({\r\n                    id: 'CurrentAdmin',\r\n                    email: admin.email,\r\n                    pass: admin.pass,\r\n                    currentId: registerId,\r\n                  });\r\n\r\n                  history.push('/');\r\n                } else {\r\n                  setHelperText((prevState) => ({\r\n                    ...prevState,\r\n                    helperTextPosition: 'Enter your Position',\r\n                  }));\r\n                }\r\n              } else {\r\n                setHelperText((prevState) => ({\r\n                  ...prevState,\r\n                  helperTextLastName: 'Enter your Last Name',\r\n                }));\r\n              }\r\n            }\r\n          } else {\r\n            addNewAdmin({\r\n              id: registerId,\r\n              email: admin.email,\r\n              pass: admin.pass,\r\n            });\r\n\r\n            history.push('/');\r\n          }\r\n        }\r\n      }\r\n    } \r\n  }\r\n\r\n  const checkPasswordConfirm = (event) => {\r\n\r\n    if(admin.pass) { // If password field is not empty, go on\r\n      if(event.target.value) { // if confirm pass field is not empty, go on\r\n        // when bouth password are not empty, go on and check are they the same\r\n        if(admin.pass === event.target.value) {\r\n          // if bouth passwords are the same, turn off errors, toggle flag about confirm pass\r\n          setHelperText((prevState) => ({\r\n            ...prevState,\r\n            helperTextPass: '',\r\n            helperTextPassConfirm: '',\r\n          }));\r\n\r\n          setAdmin((prevState) => ({\r\n            ...prevState,\r\n            passConfirmed: true,\r\n          }));\r\n        } else { //if password are not the same, go out with massage\r\n          setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextPassConfirm: 'Passwords are not the same',\r\n        }));\r\n\r\n        setAdmin((prevState) => ({\r\n          ...prevState,\r\n          passConfirmed: false,\r\n        }));\r\n        }\r\n      } else {        // if confirm pass field is empty, go out with message\r\n        setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextPassConfirm: 'Enter confirm password',\r\n        }));\r\n      }\r\n    } else {         // If password field is empty, go out with message\r\n      setHelperText((prevState) => ({\r\n          ...prevState,\r\n          helperTextPass: 'Enter password',\r\n        }));\r\n    }\r\n  }\r\n\r\n  const handleCheckChange = () => {\r\n    checkState\r\n      ? setChecState(false)\r\n      : setChecState(true)\r\n  }\r\n  // **********************************************************\r\n\r\n  return (\r\n    <section style={{textAlign: 'center'}}>\r\n      <div id='tabs-container' style={{margin: '0 auto', display: 'table', width: '40%'}}>\r\n        <Paper className={classes.paperRoot}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab label=\"LOGIN\" />\r\n            <Tab label=\"REGISTER\" />\r\n          </Tabs>\r\n          {/* *********  LOGIN TAB ********* */}\r\n          {\r\n            !value\r\n            ?\r\n            <div>\r\n              <div>\r\n                <TextField\r\n                  className={classes.input}\r\n                  required\r\n                  id=\"outlined-required-email\"\r\n                  error={!!helperText.helperTextEmail}\r\n                  helperText={helperText.helperTextEmail}\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  margin='normal'\r\n                  onBlur={(ev) => handleEmailBlur(ev)}\r\n                  onChange={(ev)=> onInputChange(ev, 'email')}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  className={classes.input}\r\n                  id=\"outlined-password-input-pass\"\r\n                  error={!!helperText.helperTextPass}\r\n                  helperText={helperText.helperTextPass}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                  margin='normal'\r\n                  onBlur={(ev) => handleLoginPassBlur(ev)}\r\n                  onChange={(ev)=> onInputChange(ev, 'pass')}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Button className={classes.button} variant=\"contained\" onClick={handleEnterButtonClick}>\r\n                  Enter\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            :\r\n            <></>\r\n          }\r\n          {/* *********  REGISTER TAB ********* */}\r\n          {\r\n            value\r\n            ?\r\n            <div>\r\n              <div>\r\n              <TextField\r\n                required\r\n                error={!!helperText.helperTextEmail}\r\n                helperText={helperText.helperTextEmail}\r\n                id=\"outlined-required-email\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                margin='normal'\r\n                onBlur={(ev) => handleEmailBlur(ev)}\r\n              />\r\n              <TextField\r\n                id=\"outlined-password-input-pass\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                variant=\"outlined\"\r\n                margin='normal'\r\n                error={!!helperText.helperTextPass}\r\n                helperText={helperText.helperTextPass}\r\n                onChange={(ev) => onAdminInputChange(ev, 'pass')}\r\n              />\r\n              <TextField\r\n                id=\"outlined-password-input-pass-confirm\"\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                variant=\"outlined\"\r\n                margin='normal'\r\n                error={!!helperText.helperTextPassConfirm}\r\n                helperText={helperText.helperTextPassConfirm}\r\n                onBlur={(ev) => checkPasswordConfirm(ev)}\r\n              />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={checkState}\r\n                      onChange={handleCheckChange}\r\n                      name=\"checkedB\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Add me to the users list\"\r\n                />\r\n                </div>\r\n                <div style={{visibility: checkState ? 'visible' : 'hidden'}}>\r\n                <TextField\r\n                    id=\"outlined-required-first-name\"\r\n                    label=\"First Name\"\r\n                    variant=\"outlined\"\r\n                    margin='normal'\r\n                    onChange={(ev)=> onUserInputChange(ev, 'firstName')}\r\n                  />\r\n                <TextField\r\n                    id=\"outlined-required-last-name\"\r\n                    label=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    margin='normal'\r\n                    error={!!helperText.helperTextLastName}\r\n                    helperText={helperText.helperTextLastName}\r\n                    onChange={(ev)=> onUserInputChange(ev, 'lastName')}\r\n                  />\r\n                  <TextField\r\n                    id=\"outlined-required-position\"\r\n                    label=\"Position\"\r\n                    variant=\"outlined\"\r\n                    margin='normal'\r\n                    error={!!helperText.helperTextPosition}\r\n                    helperText={helperText.helperTextPosition}\r\n                    onChange={(ev)=> onUserInputChange(ev, 'position')}\r\n                  />\r\n              </div>\r\n              <div>\r\n                <Button className={classes.button} variant='contained' onClick={handleRegisterButtonClick}>Register</Button>\r\n              </div>\r\n            </div>\r\n            :\r\n            <></>\r\n          }\r\n        </Paper>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nimport useAdminsActions from '../hooks/useAdminsActions';\r\n\r\nimport { makeStyles, withStyles, alpha } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport useUsersActions from '../hooks/useUsersActions';\r\n\r\n// for navigation bar\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.success.light,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\n// for menu\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.success.light,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst Header = () => {\r\n  // for drop menu   ********************\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (path) => {\r\n    if(path) {\r\n      setAnchorEl(null);\r\n      history.push(path);\r\n    }\r\n  }\r\n  // ************************************\r\n  // for search *************************\r\n  const { addNewUser, deleteUser } = useUsersActions();\r\n  \r\n  const handleSearchInputChange = (event) => {    \r\n    if(event.target.value) {\r\n      addNewUser({\r\n        id: 'search',\r\n        name: event.target.value,\r\n      });\r\n    } else {\r\n      deleteUser('search');\r\n    }\r\n  }\r\n  // ************************************\r\n\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const { admins } = useAdminsActions();\r\n\r\n  // NEEDs to remake for taking data from Context\r\n  const [login, setLogin] = useState((localStorage.getItem('isLoggedIn') === 'true') ? 'logout' : 'login');\r\n\r\n  const [pathname, setPathname] = useState();\r\n\r\n  const handleButtonClick = () => {\r\n    if(login === 'logout') {\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLogin(() => (admins.CurrentAdmin ? 'logout' : 'login'));\r\n  }, [admins]);\r\n\r\n  useEffect(() => {\r\n    let localPath;\r\n    if(location.pathname.search('/users/') !== -1 && location.pathname !== '/users/create') localPath='Editing User data';\r\n    else {\r\n      switch (location.pathname) {\r\n        case ('/'): localPath = 'Home Page'; break;\r\n        case ('/login'): localPath = 'LogIn'; break;\r\n        case ('/register'): localPath = 'Register'; break;\r\n        case ('/users'): localPath = 'Users List'; break;\r\n        case ('/users/create'): localPath = 'Add New User'; break;\r\n        default : localPath = location.pathname;\r\n      };\r\n    }\r\n    \r\n    setPathname(() => (localPath));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleMenuClick}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <StyledMenu\r\n            id=\"customized-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <StyledMenuItem onClick={() => handleMenuItemClick('/')}>\r\n              <ListItemIcon>\r\n                <HomeIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n            </StyledMenuItem>\r\n            <StyledMenuItem onClick={() => handleMenuItemClick('/users')}>\r\n              <ListItemIcon>\r\n                <PeopleIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Users List\" />\r\n            </StyledMenuItem>\r\n            <StyledMenuItem onClick={() => handleMenuItemClick('/users/create')}>\r\n              <ListItemIcon>\r\n                <PersonAddIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Add new user\" />\r\n            </StyledMenuItem>\r\n          </StyledMenu>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {`Users List App: ${pathname}`}\r\n          </Typography>\r\n          {/* Display Search only if we in '/users' route */}\r\n          {(pathname === 'Users List')\r\n            ?\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onChange={(ev) => {handleSearchInputChange(ev)}}\r\n              />\r\n            </div>\r\n            :\r\n            <></>\r\n          }\r\n          <Button color=\"inherit\" onClick={handleButtonClick}>{login}</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Redirect, Route} from 'react-router-dom';\r\nimport useAdminsActions from '../hooks/useAdminsActions';\r\n\r\nconst PrivateRoute = ({ children, ...props }) => {\r\n  \r\n  const {admins} = useAdminsActions();\r\n  const isLoggedIn = admins.CurrentAdmin ? true : false;\r\n\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={() => (\r\n        isLoggedIn \r\n        ? children\r\n        : <Redirect to='/login' />\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport Home from './components/Home.js'\r\nimport Users from './components/Users.js';\r\nimport Create from './components/Create.js';\r\nimport Edit from './components/Edit.js';\r\nimport Login from './components/Login'\r\nimport Header from './components/Header'\r\n\r\nimport PrivateRoute from './hocs/PrivateRoute'\r\n\r\nimport { UsersProvider } from './context/UsersContext';\r\nimport { AdminsProvider } from './context/AdminsContext';\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <AdminsProvider>\r\n      <UsersProvider>\r\n      <Header />\r\n      <Switch>\r\n          <PrivateRoute exact path='/'>\r\n            <Home />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/users'>\r\n            <Users />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/users/create'>\r\n            <Create />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/users/:id'>\r\n            <Edit />\r\n          </PrivateRoute>\r\n          <Route path='/login' component={Login} />\r\n        </Switch>\r\n      </UsersProvider>\r\n    </AdminsProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename='/'>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}